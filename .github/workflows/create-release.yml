name: Build and publish Docker images

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get tag version number
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Minify Chatbot scripts
        uses: nizarmah/auto-minify@v2.1
        with:
          directory: './backend/files/system/openai/front.files/chat'
          output: './backend/files/system/openai/front.files/chat'

      - name: Minify CAPTCHA script
        uses: nizarmah/auto-minify@v2.1
        with:
          directory: './backend/files/system/misc'
          output: './backend/files/system/misc'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU (for cross-platform builds)
        uses: docker/setup-qemu-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push multi-arch Docker images
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}

          docker buildx build --platform linux/amd64,linux/arm64 \
            -t servergardens/magic-backend:latest \
            -t servergardens/magic-backend:$VERSION \
            -f ./docker.backend . \
            --push

          docker buildx build --platform linux/amd64,linux/arm64 \
            -t servergardens/magic-frontend:latest \
            -t servergardens/magic-frontend:$VERSION \
            -f ./docker.frontend . \
            --push

      - name: Package versioned ZIP archive
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          zip -r magic-${VERSION}.zip *

      - name: Upload versioned ZIP to server
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          curl -X PUT -H "Content-Type: multipart/form-data" \
            -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
            -F "folder=/etc/releases/" \
            -F "file=@magic-${VERSION}.zip" \
            "https://ainiro.io/magic/system/file-system/file"

      - name: Package latest ZIP archive
        run: zip -r magic.zip *

      - name: Upload latest ZIP to server
        run: |
          curl -X PUT -H "Content-Type: multipart/form-data" \
            -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
            -F "folder=/etc/releases/" \
            -F "file=@magic.zip" \
            "https://ainiro.io/magic/system/file-system/file"


/*
 * Validates the specified reCAPTCHA token.
 *
 * This action will validate the specified reCAPTCHA token and throw an exception if validation fails,
 * unless the user is authenticated and belongs to the root role.
 */
.arguments
   recaptcha_token
      type:string
      mandatory:bool:true
   threshold
      type:decimal
      mandatory:bool:false
.icon:shield

/*
 * Checking if backend is configured to use reCAPTCHA, and if so, making sure we ensure the frontend supplied
 * a [recaptcha_token], and invoking slot responsible for verifying reCAPTCHA value.
 *
 * Notice, we do not enforce reCAPTCHA logic if user is authenticated as root.
 * This makes it easier to debug our endpoint, completely bypassing the reCAPTCHA logic if user is root.
 */
auth.ticket.get
config.get:"magic:auth:recaptcha:key"
if
   and
      not-null:x:@config.get
      neq:x:@config.get
         .:
      not-exists:x:@auth.ticket.get/*/roles/*/=root
   .lambda

      // [recaptcha_token] is a mandatory field.
      validators.mandatory:x:@.arguments/*/recaptcha_token

      // Defaulting [threshold] if not given to 0.3.
      validators.default:x:@.arguments
         threshold:decimal:0.3

      // Retrieving secret and invoking slot responsible for verifying reCAPTCHA value.
      config.get:"magic:auth:recaptcha:secret"
      validators.recaptcha:x:@.arguments/*/recaptcha_token
         min:x:@.arguments/*/threshold
         site-key:x:@config.get/@config.get
         secret:x:@config.get

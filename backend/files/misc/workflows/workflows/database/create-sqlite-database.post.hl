
/*
 * Create database.
 * 
 * Creates the database specified as [name].
 */
.arguments
   database:string

// Ensuring user is root.
auth.ticket.verify:root

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/database
validators.regex:x:@.arguments/*/database
   regex:^[a-z0-9_-]+$

// Verifying database doesn't already exist.
strings.concat
   .:/data/
   get-value:x:@.arguments/*/database
   .:.db
if
   io.file.exists:x:@strings.concat
   .lambda
      throw:Database already exists
         public:bool:true
         status:400

// Creating our database file.
io.file.save:x:@strings.concat
   .:

// Flushing database cache.
sqlite.connections.flush

// Flushing database cache.
cache.set:magic.sql.databases.sqlite.generic

// Returning success to caller.
return
   result:success

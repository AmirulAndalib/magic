
/*
 * Get database schema
 * 
 * This function returns the schema (DDL) of the specified [database]
 */
.arguments

   // Mandatory argument being database the caller wants to have the schema for
   database:string

   // Optional argument being database type. Can be either 'mysql', 'pgsql', 'mssql' or 'sqlite'. Defaults to 'sqlite'.
   database-type:string

// Ensuring user is root.
auth.ticket.verify:root

// Applying defaults.
validators.default:x:@.arguments
   database-type:sqlite

// Listing all tables in database.
.slot_name
set-value:x:@.slot_name
   strings.concat
      .:magic.db.
      get-value:x:@.arguments/*/database-type
      .:.tables
execute:x:@.slot_name
   connection-string:generic
   database:x:@.arguments/*/database
for-each:x:@execute/*/*
   unwrap:x:+/*/*
   add:x:../*/execute-file/*/tables
      .
         .:x:@.dp/#

// Calling another file to do the heavy lifting.
execute-file:/system/sql/ddl/export-tables.post.hl
   databaseType:x:@.arguments/*/database-type
   connectionString:generic
   databaseName:x:@.arguments/*/database
   full:bool:true
   tables

// Returning result to caller.
return-nodes:x:@execute-file/*

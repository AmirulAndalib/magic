
/*
 * Slot responsible for unzipping and importing a ZIP file
 * as machine learning training data.
 */
slots.create:magic.ai.import-zip-file

   // Sanity checking invocation.
   validators.mandatory:x:@.arguments/*/file
   validators.mandatory:x:@.arguments/*/file/*/name
   validators.mandatory:x:@.arguments/*/file/*/stream

   // Verifying our OpenAI temp folder exists.
   if
      not
         io.folder.exists:/etc/system/openai/temp/
      .lambda

         // Creating folder.
         io.folder.create:/etc/system/openai/temp/

   else

      // Emptying folder, first deleting all files.
      io.file.list:/etc/system/openai/temp/
      for-each:x:@io.file.list/*

         // Making sure we keep README.md file around
         if
            neq:x:@.dp/#
               .:/etc/system/openai/temp/README.md
            .lambda

               // Deleting file.
               io.file.delete:x:@.dp/#

      // Then deleting all folders.
      io.folder.list:/etc/system/openai/temp/
      for-each:x:@io.folder.list/*
         io.folder.delete:x:@.dp/#

   // Saving file and unzipping it.
   .filename
   set-value:x:@.filename
      strings.concat
         .:/etc/system/openai/temp/
         get-value:x:@.arguments/*/file/*/name
   io.stream.save-file:x:@.filename
      get-value:x:@.arguments/*/file/*/stream

   // Unzipping file.
   io.file.unzip:x:@.filename
   
   // Deleting ZIP file to preserve space.
   io.file.delete:x:@.filename
   
   // Recursively listing all files in folder.

   // Returning success to caller.
   return
      result:success
      count:int:1
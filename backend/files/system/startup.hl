
/*
 * Startup Hyperlambda file, executed as system is initially started.
 *
 * Creates the magic database, and applies some sane default configuration
 * settings.
 */

// Before we can check if magic db exists, we'll need the slots that does the heavy lifting for us.
io.file.execute:/system/sql/magic.startup/mssql/magic.db.mssql.databases.hl
io.file.execute:/system/sql/magic.startup/mysql/magic.db.mysql.databases.hl
io.file.execute:/system/sql/magic.startup/pgsql/magic.db.pgsql.databases.hl
io.file.execute:/system/sql/magic.startup/sqlite/magic.db.sqlite.databases.hl

// Creating our magic database.
io.file.execute:/system/ensure-magic-database.hl

// Executing all magic.startup Hyperlambda files.
io.file.list-recursively:/system/
io.file.list-recursively:/modules/
for-each:x:./*/io.file.list-recursively/*

   // Checking if file is a startup Hyperlambda file.
   if
      and
         strings.contains:x:@.dp/#
            .:/magic.startup/
         strings.ends-with:x:@.dp/#
            .:.hl
      .lambda

         // Executing file.
         strings.concat
            .:"Executing startup file '"
            get-value:x:@.dp/#
            .:"."
         console.log:x:-
         try
            io.file.execute:x:@.dp/#
         .catch
            log.error:Error while executing startup file
               exception:x:@.arguments/*/message
               file:x:@.dp/#

// Making sure we upgrade to new SQLite vector library.
sqlite.upgrade

// Moving vectors into correct column. Notice, this will throw an exception if column doesn't exist.
try
   console.log:Moving embedding values into embeddings
   data.connect:magic
      .no:int:0
      .continue:bool:true
      while:x:@.continue
         data.select:select id, embedding from ml_training_snippets where embeddings is null and embedding is not null limit 100
         for-each:x:@data.select/*
            strings.concat
               .:"update ml_training_snippets set embeddings = vector_as_f32('"
               get-value:x:@.dp/#/*/embedding
               .:"') where id = "
               get-value:x:@.dp/#/*/id
            data.execute:x:@strings.concat
         math.increment:x:@.no
            .:int:100
         if
            lt
               get-count:x:@data.select/*
               .:int:100
            .lambda
               set-value:x:@.continue
                  .:bool:false

      // Deleting embedding column.
      data.execute:alter table ml_training_snippets drop column embedding

   console.log:Done moving embedding values into embeddings

.catch
   console.log:No legacy vectors remaining
